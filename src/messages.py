from core import models
from aiogram import types
from core import models
import abc


class BaseMessages(abc.ABC):
    @abc.abstractmethod
    def start(self, user: models.User) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def help(self) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def daily_fact(self, fact: models.Fact) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def historical_fact(self, fact: models.Fact) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def scientific_fact(self, fact: models.Fact) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def settings_birth_date(self) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def settings_notifications(self) -> str:
        raise NotImplementedError

    @abc.abstractmethod
    def settings_notifications_time(self) -> str:
        raise NotImplementedError

    @abc.abstractclassmethod
    def fact_not_found() -> str:
        raise NotImplementedError


class RegularUser(BaseMessages):
    def start(self, user: models.User) -> str:
        return f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n–î–æ—Å—Ç—É–ø–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª üìö\n /daily - —Ñ–∞–∫—Ç –¥–Ω—è üåû\n /historical - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç üèõÔ∏è\n /scientific - –Ω–∞—É—á–Ω—ã–π —Ñ–∞–∫—Ç üî¨ \n /help - –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥"

    def help(self) -> str:
        return f"–î–æ—Å—Ç—É–ø–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª üìö\n /daily - —Ñ–∞–∫—Ç –¥–Ω—è üåû\n /historical - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç üèõÔ∏è\n /scientific - –Ω–∞—É—á–Ω—ã–π —Ñ–∞–∫—Ç üî¨"

    def fact_not_found(self) -> str:
        return f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —Ñ–∞–∫—Ç–æ–≤ –Ω–µ—Ç üòî"

    def daily_fact(self, fact: models.Fact | None) -> str:
        if not fact:
            return self.fact_not_found()

        message = f"–§–∞–∫—Ç –¥–Ω—è üåû\n\n{fact.title}\n\n{fact.text}"
        if fact.img:
            message += f"\n\n![Image]({fact.img})"
        return message

    def historical_fact(self, fact: models.Fact | None) -> str:
        if not fact:
            return self.fact_not_found()

        message = f"–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç üèõÔ∏è\n\n{fact.title}\n\n{fact.text}"
        if fact.img:
            message += f"\n\n![Image]({fact.img})"
        return message

    def scientific_fact(self, fact: models.Fact | None) -> str:
        if not fact:
            return self.fact_not_found()

        message = f"–ù–∞—É—á–Ω—ã–π —Ñ–∞–∫—Ç üî¨\n\n{fact.title}\n\n{fact.text}"
        if fact.img:
            message += f"\n\n![Image]({fact.img})"
        return message

    def settings_birth_date(self) -> str:
        return f"üìÖ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì"

    def settings_notifications(self) -> str:
        return f"üîî –•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è? –í–≤–µ–¥–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'."

    def settings_notifications_time(self) -> str:
        return f"‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú"
